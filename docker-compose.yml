version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.3"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.12
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://elasticsearch:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 35
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.7"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PORT=${PORT}
      - KONSI_BASE_URL=${KONSI_BASE_URL}
      - KONSI_AUTH_USER=${KONSI_AUTH_USER}
      - KONSI_AUTH_PASSWORD=${KONSI_AUTH_PASSWORD}
      - ELASTIC_SEARCH_URL=${ELASTIC_SEARCH_URL}
      - ELASTIC_SEARCH_USERNAME=${ELASTIC_SEARCH_USERNAME}
      - ELASTIC_SEARCH_PASSWORD=${ELASTIC_SEARCH_PASSWORD}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - RABBITMQ_HEARTBEAT_INTERVAL_IN_SECONDS=${RABBITMQ_HEARTBEAT_INTERVAL_IN_SECONDS}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT}/api/v1/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3

  web:
    image: nginx:alpine
    container_name: web
    ports:
      - "80:80"
    volumes:
      - ./public:/usr/share/nginx/html
    depends_on:
      api:
        condition: service_healthy
